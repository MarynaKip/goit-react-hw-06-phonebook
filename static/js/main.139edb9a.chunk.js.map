{"version":3,"sources":["redux/phoneBook/types.js","redux/phoneBook/selectors.js","components/Contacts/index.jsx","redux/phoneBook/actions.js","components/ContactItem/index.jsx","components/ContactList/index.jsx","App.js","redux/phoneBook/reducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["types","SAVE","DELETE","UPDATE_FILTER","getContacts","state","phoneBook","items","getFilter","filter","getVisibleContacts","createSelector","contacts","normalizedFilter","toLowerCase","name","includes","initialState","id","number","Contacts","alert","useAlert","dispatch","useDispatch","useState","setState","useSelector","handleSaveItem","item","type","payload","handleChange","e","prevState","target","value","onSubmit","preventDefault","newItem","uuidv4","Number","some","contact","show","onChange","pattern","title","required","useStyles","createUseStyles","display","marginBottom","alignItems","ContactItem","contactID","classes","find","getContact","className","onClick","list","listStyle","margin","padding","ContactList","visibleContacts","map","App","handleFilter","filterText","console","log","combineReducers","action","store","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","options","position","positions","BOTTOM_CENTER","timeout","offset","transition","transitions","SCALE","Root","template","AlertTemplate","render","document","getElementById"],"mappings":"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","file":"static/js/main.139edb9a.chunk.js","sourcesContent":["const types = {\r\n  SAVE: \"phonebook/save\",\r\n  DELETE: \"phonebook/delete\",\r\n  UPDATE_FILTER: \"phonebook/update-filter\",\r\n};\r\n\r\nexport default types;\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getContacts = (state) => state.phoneBook.items;\r\nexport const getFilter = (state) => state.phoneBook.filter;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n\r\nexport const getContact = (contactID) => (state) =>\r\n  state.phoneBook.items.find((item) => item.id === contactID);\r\n","import PropTypes from \"prop-types\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { onSave } from \"../../redux/phoneBook/actions\";\r\nimport { getContacts } from \"../../redux/phoneBook/selectors\";\r\n\r\nconst initialState = {\r\n  id: \"\",\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nconst Contacts = () => {\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n\r\n  const [state, setState] = useState(initialState);\r\n  const { name, number } = state;\r\n\r\n  const contacts = useSelector(getContacts);\r\n\r\n  const handleSaveItem = (item) => dispatch(onSave(item));\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newItem = {\r\n      id: uuidv4(), // uuid\r\n      name,\r\n      number: Number(number),\r\n    };\r\n\r\n    if (contacts.some((contact) => contact.name === newItem.name)) {\r\n      alert.show(`Contact is already in contscts.`);\r\n      return;\r\n    }\r\n\r\n    handleSaveItem(newItem);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          <span>Name:</span>\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            name=\"name\"\r\n            onChange={handleChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          <input\r\n            type=\"tel\"\r\n            value={number}\r\n            name=\"number\"\r\n            onChange={handleChange}\r\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\">+ Add</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nContacts.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contacts;\r\n","import types from \"./types\";\r\n\r\nexport const onSave = (payload) => ({\r\n  type: types.SAVE,\r\n  payload,\r\n});\r\n\r\nexport const onDelete = (payload) => ({\r\n  type: types.DELETE,\r\n  payload,\r\n});\r\n\r\nexport const onUpdate = (payload) => ({\r\n  type: types.UPDATE_FILTER,\r\n  payload,\r\n});\r\n","import { createUseStyles } from \"react-jss\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { onDelete } from \"../../redux/phoneBook/actions\";\r\nimport { getContact } from \"../../redux/phoneBook/selectors\";\r\n\r\nconst useStyles = createUseStyles({\r\n  item: {\r\n    display: \"flex\",\r\n    marginBottom: 10,\r\n    alignItems: \"flex-start\",\r\n  },\r\n});\r\n\r\nconst ContactItem = ({ contactID }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const contact = useSelector(getContact(contactID)); //from redux\r\n  const { name, id, number } = contact;\r\n\r\n  const handleDeleteItem = () => dispatch(onDelete(id));\r\n\r\n  return (\r\n    <li key={id} className={classes.item}>\r\n      {name}\r\n      {number}\r\n      <button id={id} type=\"button\" onClick={handleDeleteItem}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactItem;\r\n","import { createUseStyles } from \"react-jss\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ContactItem from \"../ContactItem\";\r\nimport { getVisibleContacts } from \"../../redux/phoneBook/selectors\";\r\n\r\nconst useStyles = createUseStyles({\r\n  list: {\r\n    listStyle: \"none\",\r\n    margin: 0,\r\n    padding: 10,\r\n  },\r\n});\r\n\r\nconst ContactList = () => {\r\n  const classes = useStyles();\r\n\r\n  const visibleContacts = useSelector(getVisibleContacts); //from redux\r\n\r\n  return (\r\n    <ul className={classes.list}>\r\n      {visibleContacts.map((contact) => (\r\n        <ContactItem contactID={contact.id} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import \"./App.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Contacts from \"./components/Contacts\";\r\nimport ContactList from \"./components/ContactList\";\r\nimport { onUpdate } from \"./redux/phoneBook/actions\";\r\nimport { getFilter } from \"./redux/phoneBook/selectors\";\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const filter = useSelector(getFilter); //from redux\r\n\r\n  const handleFilter = (filterText) => dispatch(onUpdate(filterText));\r\n\r\n  const handleChange = (e) => {\r\n    const filter = e.target.value;\r\n    console.log(filter);\r\n    handleFilter(filter);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <span>Find:</span>\r\n      <input type=\"text\" value={filter} name=\"filter\" onChange={handleChange} />\r\n\r\n      <Contacts />\r\n\r\n      <ContactList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport types from \"./types\";\r\n\r\nconst initialState = {\r\n  contacts: {\r\n    items: [\r\n      {\r\n        id: 1,\r\n        name: \"aaasssddd\",\r\n        number: 3806778965412,\r\n      },\r\n    ],\r\n    filter: \"\",\r\n  },\r\n};\r\n\r\nconst items = (state = initialState.contacts.items, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case types.SAVE:\r\n      return [...state, payload];\r\n\r\n    case types.DELETE:\r\n      return [...state.filter(({ id }) => payload !== id)];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst filter = (state = initialState.contacts.filter, action) => {\r\n  const { payload } = action;\r\n  switch (action.type) {\r\n    case types.UPDATE_FILTER:\r\n      return payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({ items, filter });\r\n","import { combineReducers } from \"redux\";\r\nimport phoneBook from \"./phoneBook/reducer\";\r\n\r\nexport default combineReducers({ phoneBook });\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { transitions, positions, Provider as AlertProvider } from \"react-alert\";\r\nimport AlertTemplate from \"react-alert-template-basic\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./redux/store\";\r\n\r\n// optional configuration\r\nconst options = {\r\n  // you can also just use 'bottom center'\r\n  position: positions.BOTTOM_CENTER,\r\n  timeout: 5000,\r\n  offset: \"30px\",\r\n  // you can also just use 'scale'\r\n  transition: transitions.SCALE,\r\n};\r\n\r\nconst Root = () => (\r\n  <AlertProvider template={AlertTemplate} {...options}>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </AlertProvider>\r\n);\r\n\r\nrender(<Root />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}